<grammar xmlns="http://relaxng.org/ns/structure/1.0"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

<!-- ############################################################### -->
<!-- I. Calculation Layer -->
<!-- ############################################################### -->

  <!-- ============================================================= -->
  <!-- I.1. Models -->
  <!-- ============================================================= -->

  <start>
    <element name="opsa-mef">
      <optional>
        <ref name="name"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <zeroOrMore>
        <choice>
          <ref name="fault-tree-definition"/>
          <ref name="CCF-group-definition"/>
        </choice>
      </zeroOrMore>
      <optional>
        <element name="model-data">
          <zeroOrMore>
            <choice>
              <ref name="house-event-definition"/>
              <ref name="basic-event-definition"/>
              <ref name="parameter-definition"/>
            </choice>
          </zeroOrMore>
        </element>
      </optional>
    </element>
  </start>

  <define name="Identifier">
    <data type="NCName">
      <param name="pattern">[^\-.]+(-[^\-.]+)*</param>
    </data>
  </define>

  <define name="name">
    <attribute name="name"> <ref name="Identifier"/> </attribute>
  </define>

  <define name="reference">
    <attribute name="name">
      <data type="NCName">
        <param name="pattern">([^\-.]+(-[^\-.]+)*)(\.\i[^\-.]*(-[^\-.]+)*)*</param>
      </data>
    </attribute>
  </define>

  <define name="NonEmptyString">  <!-- Texts without LF and other special chars. -->
    <data type="normalizedString">
      <param name="minLength">1</param>
    </data>
  </define>

  <define name="label">
    <element name="label"> <ref name="NonEmptyString"/> </element>
  </define>

  <define name="attributes">
    <element name="attributes">
      <zeroOrMore>
        <element name="attribute">
          <ref name="name"/>
          <attribute name="value"> <ref name="NonEmptyString"/> </attribute>
          <optional>
            <attribute name="type"> <ref name="NonEmptyString"/> </attribute>
          </optional>
        </element>
      </zeroOrMore>
    </element>
  </define>


  <!-- ============================================================= -->
  <!-- I.2. Consequences, Consequence Groups -->
  <!-- ============================================================= -->


  <!-- ============================================================= -->
  <!-- I.3. Missions, Phases -->
  <!-- ============================================================= -->


<!-- ############################################################### -->
<!-- II. Event Tree Layer -->
<!-- ############################################################### -->

  <!-- ============================================================= -->
  <!-- II.1. Initiating events, Initiating event Groups -->
  <!-- ============================================================= -->


  <!-- ============================================================= -->
  <!-- II.2. Event Trees -->
  <!-- ============================================================= -->


  <!-- ============================================================= -->
  <!-- II.3. Instructions, Rules -->
  <!-- ============================================================= -->


<!-- ############################################################### -->
<!-- III. Meta-Logical Layer -->
<!-- ############################################################### -->

  <!-- ============================================================= -->
  <!-- III.1. CCF-Groups -->
  <!-- ============================================================= -->

  <define name="CCF-group-definition">
    <element name="define-CCF-group">
      <ref name="name"/>
      <attribute name="model">
        <ref name="CCF-model"/>
      </attribute>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <ref name="members"/>
      <ref name="distribution"/>
      <ref name="factors"/>
    </element>
  </define>

  <define name="members">
    <element name="members">
      <oneOrMore>
        <ref name="basic-event"/>
      </oneOrMore>
    </element>
  </define>

  <define name="factors">
    <choice>
      <element name="factors">
        <oneOrMore>
          <ref name="factor"/>
        </oneOrMore>
      </element>
      <ref name="factor"/>
    </choice>
  </define>

  <define name="factor">
    <element name="factor">
      <optional>
        <attribute name="level"> <data type="nonNegativeInteger"/> </attribute>
      </optional>
      <ref name="expression"/>
    </element>
  </define>

  <define name="distribution">
    <element name="distribution">
      <ref name="expression"/>
    </element>
  </define>

  <define name="CCF-model">
    <choice>
      <value>beta-factor</value>
      <value>MGL</value>
      <value>alpha-factor</value>
      <value>phi-factor</value>
    </choice>
  </define>

  <!-- ============================================================= -->
  <!-- III.2. Substitutions -->
  <!-- ============================================================= -->


<!-- ############################################################### -->
<!-- IV. Fault Tree Layer -->
<!-- ############################################################### -->

  <!-- ============================================================= -->
  <!-- IV.1. Definitions of Fault Trees & Components -->
  <!-- ============================================================= -->

  <define name="fault-tree-definition">
    <element name="define-fault-tree">
      <ref name="name"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <zeroOrMore>
        <choice>
          <ref name="CCF-group-definition"/>
          <ref name="event-definition"/>
          <ref name="component-definition"/>
          <ref name="parameter-definition"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="component-definition">
    <element name="define-component">
      <ref name="name"/>
      <optional>
        <ref name="role"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <zeroOrMore>
        <choice>
          <ref name="CCF-group-definition"/>
          <ref name="event-definition"/>
          <ref name="component-definition"/>
          <ref name="parameter-definition"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="role">
    <attribute name="role">
      <choice>
        <value>private</value>
        <value>public</value>
      </choice>
    </attribute>
  </define>

  <define name="event-definition">
    <choice>
      <ref name="gate-definition"/>
      <ref name="house-event-definition"/>
      <ref name="basic-event-definition"/>
    </choice>
  </define>

  <!-- ============================================================= -->
  <!-- IV.2. Definitions of Gates, House Events & Basic Events -->
  <!-- ============================================================= -->

  <define name="gate-definition">
    <element name="define-gate">
      <ref name="name"/>
      <optional>
        <ref name="role"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <ref name="formula"/>
    </element>
  </define>

  <define name="house-event-definition">
    <element name="define-house-event">
      <ref name="name"/>
      <optional>
        <ref name="role"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <optional>
        <ref name="Boolean-constant"/>
      </optional>
    </element>
  </define>

  <define name="basic-event-definition">
    <element name="define-basic-event">
      <ref name="name"/>
      <optional>
        <ref name="role"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <optional>
        <ref name="expression"/>
      </optional>
    </element>
  </define>


  <!-- ============================================================= -->
  <!-- IV.3. Formulae -->
  <!-- ============================================================= -->

  <define name="formula">
    <choice>
      <ref name="event"/>
      <element name="and">
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
      <element name="or">
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
      <element name="not">
        <ref name="formula"/>
      </element>
      <element name="xor">
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
      <element name="nand">
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
      <element name="nor">
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
      <element name="atleast">
        <attribute name="min"> <data type="nonNegativeInteger"/> </attribute>
        <oneOrMore>
          <ref name="formula"/>
        </oneOrMore>
      </element>
    </choice>
  </define>

  <define name="event">
    <choice>
      <element name="event">
        <ref name="reference"/>
        <optional>
          <attribute name="type">
            <ref name="event-type"/>
          </attribute>
        </optional>
      </element>
      <ref name="gate"/>
      <ref name="house-event"/>
      <ref name="basic-event"/>
    </choice>
  </define>

  <define name="event-type">
    <choice>
      <value>gate</value>
      <value>basic-event</value>
      <value>house-event</value>
    </choice>
  </define>

  <define name="gate">
    <element name="gate">
      <ref name="reference"/>
    </element>
  </define>

  <define name="house-event">
    <element name="house-event">
      <ref name="reference"/>
    </element>
  </define>

  <define name="basic-event">
    <element name="basic-event">
      <ref name="reference"/>
    </element>
  </define>

  <define name="Boolean-constant">
    <element name="constant">
      <attribute name="value">
        <ref name="Boolean-value"/>
      </attribute>
    </element>
  </define>

  <define name="Boolean-value">
    <choice>
      <value>true</value>
      <value>false</value>
    </choice>
  </define>


<!-- ############################################################### -->
<!-- V. Stochastic Layer -->
<!-- ############################################################### -->

  <!-- ============================================================= -->
  <!-- V.1. Definition of Parameters -->
  <!-- ============================================================= -->

  <define name="parameter-definition">
    <element name="define-parameter">
      <ref name="name"/>
      <optional>
        <ref name="role"/>
      </optional>
      <optional>
        <attribute name="unit">
          <ref name="units"/>
        </attribute>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="attributes"/>
      </optional>
      <ref name="expression"/>
    </element>
  </define>

  <define name="units">
    <choice>
      <value>bool</value>
      <value>int</value>
      <value>float</value>
      <value>hours</value>
      <value>hours-1</value>
      <value>years</value>
      <value>years-1</value>
      <value>fit</value>
      <value>demands</value>
    </choice>
  </define>

  <!-- ============================================================= -->
  <!-- V.2. Expressions -->
  <!-- ============================================================= -->

    <!-- *********************************************************** -->
    <!-- V.2.1. Entities -->
    <!-- *********************************************************** -->

  <define name="expression">
    <choice>
      <ref name="constant"/>
      <ref name="parameter"/>
      <ref name="operation"/>
      <ref name="built-in"/>
      <ref name="random-deviate"/>
    </choice>
  </define>

  <define name="constant">
    <choice>
      <ref name="bool"/>
      <ref name="int"/>
      <ref name="float"/>
    </choice>
  </define>

  <define name="parameter">
    <choice>
      <element name="parameter">
        <ref name="reference"/>
        <optional>
          <attribute name="unit">
            <ref name="units"/>
          </attribute>
        </optional>
      </element>
      <element name="system-mission-time">
        <optional>
          <attribute name="unit">
            <ref name="units"/>
          </attribute>
        </optional>
      </element>
    </choice>
  </define>

  <define name="operation">
    <choice>
      <ref name="numerical-operation"/>
    </choice>
  </define>

  <define name="built-in">
    <choice>
      <ref name="exponential"/>
      <ref name="GLM"/>
      <ref name="Weibull"/>
      <ref name="periodic-test"/>
    </choice>
  </define>

  <define name="random-deviate">
    <choice>
      <ref name="uniform-deviate"/>
      <ref name="normal-deviate"/>
      <ref name="lognormal-deviate"/>
      <ref name="gamma-deviate"/>
      <ref name="beta-deviate"/>
      <ref name="histogram"/>
    </choice>
  </define>

    <!-- *********************************************************** -->
    <!-- V.2.2. Constants, Parameters -->
    <!-- *********************************************************** -->

    <define name="bool">
      <element name="bool">
        <attribute name="value">
          <ref name="Boolean-value"/>
        </attribute>
      </element>
    </define>

    <define name="int">
      <element name="int">
        <attribute name="value">
          <data type="integer"/>
        </attribute>
      </element>
    </define>

    <define name="float">
      <element name="float">
        <attribute name="value">
          <data type="double"/>
        </attribute>
      </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.3. Numerical Expressions -->
    <!-- *********************************************************** -->

  <define name="numerical-operation">
    <choice>
      <element name="neg">
        <ref name="expression"/>
      </element>
      <element name="add">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
      <element name="sub">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
      <element name="mul">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
      <element name="div">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
      <element name="pi"> <empty/> </element>
    </choice>
  </define>

    <!-- *********************************************************** -->
    <!-- V.2.4. Boolean Expressions -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.5. Conditional Expressions -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.6. Built-ins -->
    <!-- *********************************************************** -->

    <define name="exponential">
      <element name="exponential">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="GLM">
      <element name="GLM">
        <ref name="expression"/>
        <ref name="expression"/>
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="Weibull">
      <element name="Weibull">
        <ref name="expression"/>
        <ref name="expression"/>
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="periodic-test">
      <element name="periodic-test">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.7. Random-Deviates -->
    <!-- *********************************************************** -->

    <define name="uniform-deviate">
      <element name="uniform-deviate">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="normal-deviate">
      <element name="normal-deviate">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="lognormal-deviate">
      <element name="lognormal-deviate">
        <ref name="expression"/>
        <ref name="expression"/>
        <optional>
          <ref name="expression"/>
        </optional>
      </element>
    </define>

    <define name="gamma-deviate">
      <element name="gamma-deviate">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="beta-deviate">
      <element name="beta-deviate">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <define name="histogram">
      <element name="histogram">
        <ref name="expression"/>
        <oneOrMore>
          <ref name="bin"/>
        </oneOrMore>
      </element>
    </define>

    <define name="bin">
      <element name="bin">
        <ref name="expression"/>
        <ref name="expression"/>
      </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.8. Test-Events -->
    <!-- *********************************************************** -->

</grammar>
